{"version":3,"sources":["js/API/pixabayApi.js","js/pictures.js","index.js"],"names":["BASE_URL","KEY","page","nameKey","fetchPictures","name","fetch","then","response","ok","json","Error","formEl","document","querySelector","galleryWrap","loadMore","formData","onSubmitForm","evt","preventDefault","currentTarget","elements","searchQuery","value","innerHTML","loadPictures","renderPictures","pictures","murkup","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","data","hits","addEventListener"],"mappings":";;;AAoBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EApBD,MAAMA,EAAW,2BACXC,EAAM,qCACZ,IAAIC,EAAO,EACPC,EAAU,GAEP,SAASC,EAAcC,GAKpBC,OAJFH,IAAYE,IACZF,EAAUE,EACVH,EAAO,GAELI,SAASN,SAAgBC,sBAAwBC,OAAUC,6DACpEI,KAAKC,IACIA,GAAAA,EAASC,GACJD,OAAAA,EAASE,OAEZC,MAAAA,MAAM,YAEVJ,KAAKC,IACLN,GAAQ,EACFM;;ACgCb,aAnDD,IAAA,EAAA,QAAA,oBAEA,MAAMI,EAASC,SAASC,cAAc,gBAChCC,EAAcF,SAASC,cAAc,YACrCE,EAAWH,SAASC,cAAc,cACxC,IAAIG,EAAW,GAIf,SAASC,EAAaC,GAClBA,EAAIC,iBACAH,IAAaE,EAAIE,cAAcC,SAASC,YAAYC,QACpDP,EAAWE,EAAIE,cAAcC,SAASC,YAAYC,MAClDT,EAAYU,UAAY,GACxBC,EAAaT,IAIrB,SAASU,EAAeC,GACdC,MAAAA,EAASD,EAASE,IAAI,EAAGC,aAAAA,EAAcC,cAAAA,EAAeC,KAAAA,EAAMC,MAAAA,EAAOC,MAAAA,EAAOC,SAAAA,EAAUC,UAAAA,mEAC3DL,oBACrBD,WAAsBE,yGAK5BC,qEAIAC,wEAIAC,yEAIAC,iCAICC,KAAK,IAEVvB,EAAYwB,mBAAmB,YAAaV,GAKhD,SAASH,EAAaT,IACJA,EAAAA,EAAAA,eAAAA,GAAUV,KAAKiC,GAAQb,EAAea,EAAKC,OA3C7D7B,EAAO8B,iBAAiB,SAAUxB,GAwClCF,EAAS0B,iBAAiB,QAAS,IAAMhB,EAAaT;;AC9CtD,aADA,QAAA,oBACA,QAAA","file":"src.7840e524.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '24347539-7a784c76778ec6b315780761f';\nlet page = 1;\nlet nameKey = '';\n\nexport function fetchPictures(name) {\n    if (nameKey !== name) {\n        nameKey = name;\n        page = 1;\n    }\n   return fetch(`${BASE_URL}?key=${KEY}&per_page=40&page=${page}&q=${nameKey}&image_type=photo&orientation=horizontal&safesearch=true`)\n.then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw Error('Whoops');\n})\n       .then(response => {\n        page += 1\n       return response})\n}\n","import { fetchPictures } from './API/pixabayApi'\n\nconst formEl = document.querySelector('#search-form');\nconst galleryWrap = document.querySelector('.gallery');\nconst loadMore = document.querySelector('.load-more')\nlet formData = \"\"\n\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n    evt.preventDefault();\n    if (formData !== evt.currentTarget.elements.searchQuery.value) {\n        formData = evt.currentTarget.elements.searchQuery.value;\n        galleryWrap.innerHTML = \"\";\n        loadPictures(formData);\n    } \n}\n\nfunction renderPictures(pictures) {\n    const murkup = pictures.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `<div class=\"photo-card\">\n  <a class=\"gallery__item\" href=\"${largeImageURL}\">\n  <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n</a>\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes</b>\n      ${likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b>\n      ${views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b>\n      ${comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b>\n      ${downloads}\n    </p>\n  </div>\n</div>`)\n        .join('');\n    \n    galleryWrap.insertAdjacentHTML('beforeend', murkup);\n}\n \nloadMore.addEventListener('click', () => loadPictures(formData));\n\nfunction loadPictures(formData) {\n    fetchPictures(formData).then(data => renderPictures(data.hits));\n}\n\n","import './sass/main.scss';\nimport './js/pictures';"]}